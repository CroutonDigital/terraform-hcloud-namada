#cloud-config
users:
  - name: devops
    groups: users, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa <key>
package_update: true
package_upgrade: true
packages:
  - vim
  - ca-certificates
  - curl
  - gnupg
  - wget
write_files:
  - path: /bin/docker-up
    content: |
        #!/usr/bin/bash
        docker-compose up -d
  - path: /etc/systemd/system/docker-up.service
    content: |
        [Unit]
        Description=namada NODE Startup

        [Service]
        Type=simple
        ExecStart=/bin/docker-up
        WorkingDirectory=/opt/service

        [Install]
        WantedBy=default.target
  - path: /etc/profile.d/service-env.sh
    content: |
      export APP_VERSION=${version}
  - path: /opt/service/docker-compose.yml
    content: |
        ---
        version: '3.9'
        services:
          namada-init:
            container_name: namada-init
            image: ghcr.io/anoma/namada:${version}
            user: "0:0"
            command: ["client", "utils", "join-network", "--chain-id", "${namada_chainid}"]
            environment:
              - CHAIN_ID="${namada_chainid}"
              - BASE_DIR="/namada"
            volumes:
              - ./volumes/namada:/.namada
          namada-node:
            container_name: namada-node
            image: ghcr.io/anoma/namada:${version}
            user: "0:0"
            command: ["ledger", "run"]
            #entrypoint: ["tail", "-f", "/dev/null"]
            #restart: always
            environment:
              - CHAIN_ID="${namada_chainid}"
              #- RUST_BACKTRACE=1
              - BASE_DIR="/namada"
            ports:
              - "26656:26656"
            volumes:
              - ./volumes/namada:/.namada
            depends_on:
              namada-init:
                  condition: service_completed_successfully
            logging:
              driver: "json-file"
              options:
                max-size: 10m
                max-file: "3"

runcmd:
  - echo '${opt} /opt/service/volumes xfs discard,nofail,defaults 0 0' >> /etc/fstab
  - mkdir -p /opt/service/volumes && mount /opt/service/volumes
  - install -m 0755 -d /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  - chmod a+r /etc/apt/keyrings/docker.gpg
  - echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt update && apt -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  - wget https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-linux-x86_64
  - mv docker-compose-linux-x86_64 /bin/docker-compose && chmod a+x /bin/docker-compose
  - echo 'vm.overcommit_memory = 1' >> /etc/sysctl.conf
  - chmod u+x /bin/docker-up
  - systemctl enable docker
  - systemctl daemon-reload && systemctl enable docker-up.service
  - shutdown -r now



